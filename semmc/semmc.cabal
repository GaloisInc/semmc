-- Initial semmc.cabal generated by cabal init.  For further documentation,
--  see http://haskell.org/cabal/users-guide/

name:                semmc
version:             0.1.0.0
synopsis:            Semantics synthesis for machine code
-- description:         
license:             BSD3
license-file:        LICENSE
author:              Tristan Ravitch
maintainer:          tristan@nochair.net
-- copyright:           
category:            Compiler
build-type:          Simple
extra-source-files:  ChangeLog.md
cabal-version:       >=1.10

library
  exposed-modules:     SemMC
                       SemMC.Architecture
                       SemMC.Architecture.AllocatedOperand
                       SemMC.Architecture.Concrete
                       SemMC.Architecture.Evaluate
                       SemMC.Architecture.Location
                       SemMC.Architecture.Value
                       SemMC.Architecture.View
                       SemMC.BoundVar
                       SemMC.Concrete.Execution
                       SemMC.Concrete.Execution.SSH
                       SemMC.DSL
                       SemMC.Formula
                       SemMC.Formula.Env
                       SemMC.Formula.Equivalence
                       SemMC.Formula.Eval
                       SemMC.Formula.Formula
                       SemMC.Formula.Instantiate
                       SemMC.Formula.Load
                       SemMC.Formula.Parser
                       SemMC.Formula.Printer
                       SemMC.Formula.SETokens
                       SemMC.Log
                       SemMC.Log.Tests
                       SemMC.Stochastic.CandidateProgram
                       SemMC.Stochastic.Constraints
                       SemMC.Stochastic.Classify
                       SemMC.Stochastic.Extract
                       SemMC.Stochastic.Generalize
                       SemMC.Stochastic.IORelation
                       SemMC.Stochastic.IORelation.Explicit
                       SemMC.Stochastic.IORelation.Implicit
                       SemMC.Stochastic.IORelation.Parser
                       SemMC.Stochastic.IORelation.Shared
                       SemMC.Stochastic.IORelation.Types
                       SemMC.Stochastic.Initialize
                       SemMC.Stochastic.Instantiate
                       SemMC.Stochastic.Monad
                       SemMC.Stochastic.Pseudo
                       SemMC.Stochastic.RvwpOptimization
                       SemMC.Stochastic.Statistics
                       SemMC.Stochastic.Strata
                       SemMC.Stochastic.Synthesize
                       SemMC.Synthesis
                       SemMC.Synthesis.Cegis
                       SemMC.Synthesis.Cegis.Types
                       SemMC.Synthesis.Cegis.EvalFormula
                       SemMC.Synthesis.Cegis.ReadWriteEval
                       SemMC.Synthesis.Cegis.LLVMMem
                       SemMC.Synthesis.Cegis.MemAccesses
                       SemMC.Synthesis.Cegis.Tests
                       SemMC.Synthesis.Core
                       SemMC.Synthesis.DivideAndConquer
                       SemMC.Synthesis.Template
                       SemMC.Synthesis.Testing
                       SemMC.Symbolic
                       SemMC.TH
                       SemMC.Util
                       SemMC.Util.Tests
                       SemMC.Worklist
                       Data.Parameterized.Seq
                       Data.Parameterized.Unfold
                       Data.Type.List
  other-modules:       SemMC.Architecture.Internal
                       SemMC.DSL.Internal
  -- The tight async bound of @< 2.2@ is due to (great!) recent
  -- changes related to making our @asyncLinked@ obsolete. However,
  -- they also break our current @asyncLinked@ implementation, so we
  -- can change the lower bound to @2.2@ (or whatever) when these
  -- changes land. The changes are described here:
  -- https://github.com/simonmar/async/issues/25#issuecomment-349413317
  build-depends:       base >=4.9 && <5,
                       template-haskell,
                       ghc-prim,
                       containers >= 0.5.8,
                       ordered-containers,
                       bytestring,
                       binary,
                       filepath,
                       stm,
                       BoundedChan,
                       located-base,
                       text >= 1 && < 2,
                       mwc-random >= 0.13 && < 0.15,
                       exceptions >= 0.8 && < 0.11,
                       s-cargot >= 0.1.4.0 && < 0.2,
                       s-cargot-letbind >= 0.2.2.0 && < 0.3,
                       dismantle-tablegen,
                       crucible >= 0.4,
                       parameterized-utils >= 1 && < 2.1,
                       process >= 1.4 && < 1.7,
                       async >= 2.2 && < 2.3,
                       time,
                       parsec >= 3.1 && < 3.2,
                       megaparsec >= 7 && < 8,
                       mtl >= 2.2 && < 2.3,
                       hashtables >= 1.2 && < 1.3,
                       transformers >= 0.5.2 && < 0.6,
                       sqlite-simple >= 0.4 && < 0.5,
                       directory,
                       unliftio,
                       what4 >= 0.4,
                       crucible-llvm,
                       ansi-wl-pprint
  hs-source-dirs:      src
  default-language:    Haskell2010
  ghc-options:         -Wall
  if impl(ghc >= 8.1)
     ghc-options: -Wno-simplifiable-class-constraints
  if impl(ghc >= 8.6)
     default-extensions: NoStarIsType

executable cmpsem
  default-language: Haskell2010
  ghc-options: -Wall
  hs-source-dirs: tools
  main-is: cmpsem.hs
  build-depends:   base
                 , optparse-applicative
                 , semmc
                 , text


test-suite semmc-tests
  default-language: Haskell2010
  type: exitcode-stdio-1.0
  ghc-options: -Wall -rtsopts -threaded
  hs-source-dirs: tests
  main-is: Main.hs
  other-modules: Util
  build-depends:   semmc
                 , base
                 , containers
                 , tasty >= 0.10 && < 2
                 , tasty-hunit
                 , async
                 , directory


test-suite semmc-semstore-tests
  -- Tests for verifying semantics can be stored and subsequently read
  -- back in as a round-trip (validating the parser and the printer).
  default-language: Haskell2010
  type: exitcode-stdio-1.0
  ghc-options: -Wall
  main-is: SemStore.hs
  other-modules: HedgehogUtil
               , LocationsTests
               , ParameterTests
               , ParamFormulaTests
               , TestArch
               , TestArchPropGen
               , TestUtils
  hs-source-dirs: tests/semstore
  build-depends: base
               , bytestring
               , containers
               , crucible
               , directory
               , dismantle-tablegen
               , exceptions
               , hashable
               , hedgehog
               , parameterized-utils
               , semmc
               , tasty
               , tasty-hunit
               , tasty-hedgehog
               , text
               , transformers
               , what4
