(AslDefinitions
  (DefCallable
    (QualifiedIdentifier Any Replicate)
    (list
      (SymDecl
        bv
        (TypeFun
          bits
          (ExprVarRef
            (QualifiedIdentifier Any N)))))
    (Just
      (ReturnType
        (list
          (TypeFun
            bits
            (ExprBinOp
              "*"
              (ExprVarRef
                (QualifiedIdentifier Any N))
              (ExprVarRef
                (QualifiedIdentifier Any M)))))))
    (Just
      (StmtBlock
        (list
          (StmtReturn
            (Just
              (ExprCall
                (QualifiedIdentifier Any Replicate)
                (list
                  (ExprVarRef
                    (QualifiedIdentifier Any bv))
                  (ExprVarRef
                    (QualifiedIdentifier Any M))))))))))
  (DefCallable
    (QualifiedIdentifier Any sizeOf)
    (list
      (SymDecl
        bv
        (TypeFun
          bits
          (ExprVarRef
            (QualifiedIdentifier Any N)))))
    (Just
      (ReturnType
        (list
          (TypeRef
            (QualifiedIdentifier Any integer)))))
    (Just
      (StmtBlock
        (list
          (StmtReturn
            (Just
              (ExprVarRef
                (QualifiedIdentifier Any N))))))))
  (DefConst
    LOG2_TAG_GRANULE
    (TypeRef
      (QualifiedIdentifier Any integer))
    (ExprLitNat 4))
  (DefConst
    TAG_GRANULE
    (TypeRef
      (QualifiedIdentifier Any integer))
    (ExprBinOp
      "^"
      (ExprLitNat 2)
      (ExprVarRef
        (QualifiedIdentifier Any LOG2_TAG_GRANULE))))
  (DefVariable
    (QualifiedIdentifier Any __AssertionFailure)
    (TypeRef
      (QualifiedIdentifier Any boolean)))
  (DefVariable
    (QualifiedIdentifier Any __EndOfInstruction)
    (TypeRef
      (QualifiedIdentifier Any boolean)))
  (DefVariable
    (QualifiedIdentifier Any __UndefinedBehavior)
    (TypeRef
      (QualifiedIdentifier Any boolean)))
  (DefVariable
    (QualifiedIdentifier Any __UnpredictableBehavior)
    (TypeRef
      (QualifiedIdentifier Any boolean)))
  (DefCallable
    (QualifiedIdentifier Any ASLCheckAssertion)
    (list
      (SymDecl
        assertion
        (TypeRef
          (QualifiedIdentifier Any boolean))))
    Nothing
    (Just
      (StmtBlock
        (list
          (StmtAssign
            (LValVarRef
              (QualifiedIdentifier Any __AssertionFailure))
            (ExprBinOp
              "OR"
              (ExprVarRef
                (QualifiedIdentifier Any __AssertionFailure))
              (ExprUnOp
                "!"
                (ExprVarRef
                  (QualifiedIdentifier Any assertion)))))
          (StmtReturn Nothing)))))
  (DefCallable
    (QualifiedIdentifier Any ASLSetUndefined)
    (list)
    Nothing
    (Just
      (StmtBlock
        (list
          (StmtAssign
            (LValVarRef
              (QualifiedIdentifier Any __UndefinedBehavior))
            (ExprVarRef
              (QualifiedIdentifier Any TRUE)))
          (StmtReturn Nothing)))))
  (DefCallable
    (QualifiedIdentifier Any ASLSetUnpredictable)
    (list)
    Nothing
    (Just
      (StmtBlock
        (list
          (StmtAssign
            (LValVarRef
              (QualifiedIdentifier Any __UnpredictableBehavior))
            (ExprVarRef
              (QualifiedIdentifier Any TRUE)))
          (StmtReturn Nothing)))))
  (DefCallable
    (QualifiedIdentifier Any EndOfInstruction)
    (list)
    Nothing
    (Just
      (StmtBlock
        (list
          (StmtAssign
            (LValVarRef
              (QualifiedIdentifier Any __EndOfInstruction))
            (ExprVarRef
              (QualifiedIdentifier Any TRUE)))
          (StmtReturn Nothing)))))
  (DefCallable
    (QualifiedIdentifier AArch32 SetDefaultCond)
    (list)
    (Just
      (ReturnType
        (list
          (TypeFun
            bits
            (ExprLitNat 4)))))
    (Just
      (StmtBlock
        (list
          (StmtIf
            (ExprBinOp
              "||"
              (ExprInSet
                (ExprVarRef
                  (QualifiedIdentifier Any __ThisInstrEnc))
                (Set
                  (list
                    (SetElementSingle
                      (ExprVarRef
                        (QualifiedIdentifier Any InstrEnc_A64)))
                    (SetElementSingle
                      (ExprVarRef
                        (QualifiedIdentifier Any InstrEnc_A32))))))
              (ExprBinOp
                "=="
                (ExprSlice
                  (ExprMember
                    (ExprVarRef
                      (QualifiedIdentifier Any PSTATE))
                    IT)
                  (list
                    (SliceRange
                      (ExprLitNat 3)
                      (ExprLitNat 0))))
                (ExprCall
                  (QualifiedIdentifier Any Zeros)
                  (list
                    (ExprLitNat 4)))))
            (StmtBlock
              (list
                (StmtAssign
                  (LValVarRef
                    (QualifiedIdentifier Any __currentCond))
                  (ExprSlice
                    (ExprLitHex "0xE")
                    (list
                      (SliceRange
                        (ExprLitNat 3)
                        (ExprLitNat 0)))))))
            (list)
            (Just
              (StmtBlock
                (list
                  (StmtAssign
                    (LValVarRef
                      (QualifiedIdentifier Any __currentCond))
                    (ExprSlice
                      (ExprMember
                        (ExprVarRef
                          (QualifiedIdentifier Any PSTATE))
                        IT)
                      (list
                        (SliceRange
                          (ExprLitNat 7)
                          (ExprLitNat 4)))))))))
          (StmtReturn
            (Just
              (ExprVarRef
                (QualifiedIdentifier Any cond))))))))
  (DefCallable
    (QualifiedIdentifier Any ConsumptionOfSpeculativeDataBarrier)
    (list)
    Nothing
    (Just
      (StmtBlock
        (list
          (StmtReturn Nothing)))))
  (DefCallable
    (QualifiedIdentifier Any SpeculativeStoreBypassBarrierToPA)
    (list)
    Nothing
    (Just
      (StmtBlock
        (list
          (StmtReturn Nothing)))))
  (DefCallable
    (QualifiedIdentifier Any SpeculationBarrier)
    (list)
    Nothing
    (Just
      (StmtBlock
        (list
          (StmtReturn Nothing)))))
  (DefCallable
    (QualifiedIdentifier Any SpeculativeStoreBypassBarrierToVA)
    (list)
    Nothing
    (Just
      (StmtBlock
        (list
          (StmtReturn Nothing)))))
  (DefCallable
    (QualifiedIdentifier Any SynchronizeErrors)
    (list)
    Nothing
    (Just
      (StmtBlock
        (list
          (StmtReturn Nothing)))))
  (DefCallable
    (QualifiedIdentifier AArch64 SysRegRead)
    (list
      (SymDecl
        op0
        (TypeRef
          (QualifiedIdentifier Any integer)))
      (SymDecl
        op1
        (TypeRef
          (QualifiedIdentifier Any integer)))
      (SymDecl
        crn
        (TypeRef
          (QualifiedIdentifier Any integer)))
      (SymDecl
        crm
        (TypeRef
          (QualifiedIdentifier Any integer)))
      (SymDecl
        op2
        (TypeRef
          (QualifiedIdentifier Any integer))))
    (Just
      (ReturnType
        (list
          (TypeFun
            bits
            (ExprLitNat 64)))))
    (Just
      (StmtBlock
        (list
          (StmtAssert
            (ExprVarRef
              (QualifiedIdentifier Any FALSE)))
          (StmtAssign
            (LValVarRef
              (QualifiedIdentifier Any reg))
            (ExprUnknown
              (TypeFun
                bits
                (ExprLitNat 64))))
          (StmtReturn
            (Just
              (ExprVarRef
                (QualifiedIdentifier Any reg))))))))
  (DefCallable
    (QualifiedIdentifier Any ReservedEncoding)
    (list)
    Nothing
    (Just
      (StmtBlock
        (list
          (StmtReturn Nothing)))))
  (DefCallable
    (QualifiedIdentifier Any IsPhysicalSErrorPending)
    (list)
    (Just
      (ReturnType
        (list
          (TypeRef
            (QualifiedIdentifier Any boolean)))))
    (Just
      (StmtBlock
        (list
          (StmtAssign
            (LValVarRef
              (QualifiedIdentifier Any ret))
            (ExprUnknown
              (TypeRef
                (QualifiedIdentifier Any boolean))))
          (StmtReturn
            (Just
              (ExprVarRef
                (QualifiedIdentifier Any ret))))))))
  (DefCallable
    (QualifiedIdentifier AArch32 BreakpointValueMatch)
    (list
      (SymDecl
        n
        (TypeRef
          (QualifiedIdentifier Any integer)))
      (SymDecl
        vaddress
        (TypeFun
          bits
          (ExprLitNat 32)))
      (SymDecl
        linked_to
        (TypeRef
          (QualifiedIdentifier Any boolean))))
    (Just
      (ReturnType
        (list
          (TypeRef
            (QualifiedIdentifier Any boolean))
          (TypeRef
            (QualifiedIdentifier Any boolean)))))
    (Just
      (StmtBlock
        (list
          (StmtReturn
            (Just
              (ExprTuple
                (list
                  (ExprVarRef
                    (QualifiedIdentifier Any FALSE))
                  (ExprVarRef
                    (QualifiedIdentifier Any FALSE))))))))))
  (DefCallable
    (QualifiedIdentifier AArch64 BreakpointValueMatch)
    (list
      (SymDecl
        n
        (TypeRef
          (QualifiedIdentifier Any integer)))
      (SymDecl
        vaddress
        (TypeFun
          bits
          (ExprLitNat 64)))
      (SymDecl
        linked_to
        (TypeRef
          (QualifiedIdentifier Any boolean))))
    (Just
      (ReturnType
        (list
          (TypeRef
            (QualifiedIdentifier Any boolean)))))
    (Just
      (StmtBlock
        (list
          (StmtReturn
            (Just
              (ExprVarRef
                (QualifiedIdentifier Any FALSE))))))))
  (DefCallable
    (QualifiedIdentifier Any IsBlockDescriptorNTBitValid)
    (list)
    (Just
      (ReturnType
        (list
          (TypeRef
            (QualifiedIdentifier Any boolean)))))
    (Just
      (StmtBlock
        (list
          (StmtReturn
            (Just
              (ExprVarRef
                (QualifiedIdentifier Any FALSE))))))))
  (DefCallable
    (QualifiedIdentifier Any LSInstructionSyndrome)
    (list)
    (Just
      (ReturnType
        (list
          (TypeFun
            bits
            (ExprLitNat 11)))))
    (Just
      (StmtBlock
        (list
          (StmtAssert
            (ExprVarRef
              (QualifiedIdentifier Any FALSE)))
          (StmtAssign
            (LValVarRef
              (QualifiedIdentifier Any ret))
            (ExprUnknown
              (TypeFun
                bits
                (ExprLitNat 11))))
          (StmtReturn
            (Just
              (ExprVarRef
                (QualifiedIdentifier Any ret))))))))
  (DefCallable
    (QualifiedIdentifier Any TraceSynchronizationBarrier)
    (list)
    Nothing
    (Just
      (StmtBlock
        (list
          (StmtAssert
            (ExprVarRef
              (QualifiedIdentifier Any FALSE)))
          (StmtReturn Nothing)))))
  (DefCallable
    (QualifiedIdentifier Any __abort)
    (list)
    Nothing
    (Just
      (StmtBlock
        (list
          (StmtAssert
            (ExprVarRef
              (QualifiedIdentifier Any FALSE)))
          (StmtReturn Nothing)))))
  (DefCallable
    (QualifiedIdentifier AArch32 WatchpointMatch)
    (list
      (SymDecl
        n
        (TypeRef
          (QualifiedIdentifier Any integer)))
      (SymDecl
        vaddress
        (TypeFun
          bits
          (ExprLitNat 32)))
      (SymDecl
        size
        (TypeRef
          (QualifiedIdentifier Any integer)))
      (SymDecl
        ispriv
        (TypeRef
          (QualifiedIdentifier Any boolean)))
      (SymDecl
        iswrite
        (TypeRef
          (QualifiedIdentifier Any boolean))))
    (Just
      (ReturnType
        (list
          (TypeRef
            (QualifiedIdentifier Any boolean)))))
    (Just
      (StmtBlock
        (list
          (StmtReturn
            (Just
              (ExprVarRef
                (QualifiedIdentifier Any FALSE))))))))
  (DefCallable
    (QualifiedIdentifier AArch64 WatchpointMatch)
    (list
      (SymDecl
        n
        (TypeRef
          (QualifiedIdentifier Any integer)))
      (SymDecl
        vaddress
        (TypeFun
          bits
          (ExprLitNat 64)))
      (SymDecl
        size
        (TypeRef
          (QualifiedIdentifier Any integer)))
      (SymDecl
        ispriv
        (TypeRef
          (QualifiedIdentifier Any boolean)))
      (SymDecl
        acctype
        (TypeRef
          (QualifiedIdentifier Any AccType)))
      (SymDecl
        iswrite
        (TypeRef
          (QualifiedIdentifier Any boolean))))
    (Just
      (ReturnType
        (list
          (TypeRef
            (QualifiedIdentifier Any boolean)))))
    (Just
      (StmtBlock
        (list
          (StmtReturn
            (Just
              (ExprVarRef
                (QualifiedIdentifier Any FALSE))))))))
  (DefCallable
    (QualifiedIdentifier AArch64 TranslationTableWalk)
    (list
      (SymDecl
        ipaddress
        (TypeFun
          bits
          (ExprLitNat 52)))
      (SymDecl
        s1_nonsecure
        (TypeRef
          (QualifiedIdentifier Any bit)))
      (SymDecl
        vaddress
        (TypeFun
          bits
          (ExprLitNat 64)))
      (SymDecl
        acctype
        (TypeRef
          (QualifiedIdentifier Any AccType)))
      (SymDecl
        iswrite
        (TypeRef
          (QualifiedIdentifier Any boolean)))
      (SymDecl
        secondstage
        (TypeRef
          (QualifiedIdentifier Any boolean)))
      (SymDecl
        s2fs1walk
        (TypeRef
          (QualifiedIdentifier Any boolean)))
      (SymDecl
        size
        (TypeRef
          (QualifiedIdentifier Any integer))))
    (Just
      (ReturnType
        (list
          (TypeRef
            (QualifiedIdentifier Any TLBRecord)))))
    (Just
      (StmtBlock
        (list
          (StmtAssert
            (ExprVarRef
              (QualifiedIdentifier Any FALSE)))
          (StmtVarsDecl
            (list result)
            (TypeRef
              (QualifiedIdentifier Any TLBRecord)))
          (StmtReturn
            (Just
              (ExprVarRef
                (QualifiedIdentifier Any result))))))))
  (DefCallable
    (QualifiedIdentifier AArch32 TranslationTableWalkLD)
    (list
      (SymDecl
        ipaddress
        (TypeFun
          bits
          (ExprLitNat 40)))
      (SymDecl
        vaddress
        (TypeFun
          bits
          (ExprLitNat 32)))
      (SymDecl
        acctype
        (TypeRef
          (QualifiedIdentifier Any AccType)))
      (SymDecl
        iswrite
        (TypeRef
          (QualifiedIdentifier Any boolean)))
      (SymDecl
        secondstage
        (TypeRef
          (QualifiedIdentifier Any boolean)))
      (SymDecl
        s2fs1walk
        (TypeRef
          (QualifiedIdentifier Any boolean)))
      (SymDecl
        size
        (TypeRef
          (QualifiedIdentifier Any integer))))
    (Just
      (ReturnType
        (list
          (TypeRef
            (QualifiedIdentifier Any TLBRecord)))))
    (Just
      (StmtBlock
        (list
          (StmtAssert
            (ExprVarRef
              (QualifiedIdentifier Any FALSE)))
          (StmtVarsDecl
            (list result)
            (TypeRef
              (QualifiedIdentifier Any TLBRecord)))
          (StmtReturn
            (Just
              (ExprVarRef
                (QualifiedIdentifier Any result))))))))
  (DefCallable
    (QualifiedIdentifier AArch32 TranslationTableWalkSD)
    (list
      (SymDecl
        vaddress
        (TypeFun
          bits
          (ExprLitNat 32)))
      (SymDecl
        acctype
        (TypeRef
          (QualifiedIdentifier Any AccType)))
      (SymDecl
        iswrite
        (TypeRef
          (QualifiedIdentifier Any boolean)))
      (SymDecl
        size
        (TypeRef
          (QualifiedIdentifier Any integer))))
    (Just
      (ReturnType
        (list
          (TypeRef
            (QualifiedIdentifier Any TLBRecord)))))
    (Just
      (StmtBlock
        (list
          (StmtAssert
            (ExprVarRef
              (QualifiedIdentifier Any FALSE)))
          (StmtVarsDecl
            (list result)
            (TypeRef
              (QualifiedIdentifier Any TLBRecord)))
          (StmtReturn
            (Just
              (ExprVarRef
                (QualifiedIdentifier Any result)))))))))