;; AND register, Encoding T2 (F7.1.14, F7-2558)
;; This encoding has no shift; fixed to 0
((operands
 ((rD RGPR)
  (setcc Cc_out)
  (rN RGPR)
  (rM RGPR)))
 (in
  (op.setcc op.rM op.rN op.rD loc.CPSR loc.PC))
 (defs
  ((loc.PC
   (with
    ()
    (let
     ((immShift
      (concat
       #b000
       ((_ zero_extend 27)
        #b00000)))
      (branchWritePC
       (ite
        (call uf.arm.is_r15 op.rD)
        (bvand
         #xfffffffd
         (bvand
          op.rN
          ((_ extract 32 1)
           (call
            df.shiftC
            op.rM
            ((_ extract 2 0)
             immShift)
            ((_ extract 34 3)
             immShift)
            ((_ extract 2 2)
             loc.CPSR)))))
        (bvadd loc.PC #x00000002))))
     branchWritePC)))
   (loc.CPSR
    (with
     ()
     (let
      ((immShift
       (concat
        #b000
        ((_ zero_extend 27)
         #b00000)))
       (nzcv
        (concat
         ((_ extract 0 0)
          (bvand
           op.rN
           ((_ extract 32 1)
            (call
             df.shiftC
             op.rM
             ((_ extract 2 0)
              immShift)
             ((_ extract 34 3)
              immShift)
             ((_ extract 2 2)
              loc.CPSR)))))
         (concat
          (call
           df.isZeroBit
           (bvand
            op.rN
            ((_ extract 32 1)
             (call
              df.shiftC
              op.rM
              ((_ extract 2 0)
               immShift)
              ((_ extract 34 3)
               immShift)
              ((_ extract 2 2)
               loc.CPSR)))))
          (concat
           ((_ extract 0 0)
            (call
             df.shiftC
             op.rM
             ((_ extract 2 0)
              immShift)
             ((_ extract 34 3)
              immShift)
             ((_ extract 2 2)
              loc.CPSR)))
           ((_ extract 3 3)
            loc.CPSR))))))
      (ite
       (call
        df.testCondition
        (call df.ITState loc.CPSR)
        loc.CPSR)
       (ite
        (andp
         (bveq op.setcc #b1)
         (notp
          (call uf.arm.is_r15 op.rD)))
        (concat
         nzcv
         ((_ extract 31 4)
          loc.CPSR))
        loc.CPSR)
       loc.CPSR))))
   (op.rD
    (with
     ()
     (let
      ((immShift
       (concat
        #b000
        ((_ zero_extend 27)
         #b00000))))
      (ite
       (call
        df.testCondition
        (call df.ITState loc.CPSR)
        loc.CPSR)
       (ite
        (call uf.arm.is_r15 op.rD)
        op.rD
        (bvand
         op.rN
         ((_ extract 32 1)
          (call
           df.shiftC
           op.rM
           ((_ extract 2 0)
            immShift)
           ((_ extract 34 3)
            immShift)
           ((_ extract 2 2)
            loc.CPSR)))))
       op.rD)))))))
