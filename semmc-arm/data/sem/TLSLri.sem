;; Logical Shift Left, Encoding T1
;; doc: F7.1.99, page F7-2692
((operands
 ((rD TGPR)
  (imm Imm0_31)
  (rM TGPR)))
 (in
  (op.rM op.imm loc.CPSR loc.PC))
 (defs
  ((loc.PC
   (with
    ()
    (let
     ((immShift
      (concat
       #b000
       ((_ zero_extend 27)
        op.imm)))
      (branchWritePC
       (ite
        (call uf.arm.is_r15 op.rD)
        (bvand
         #xfffffffd
         ((_ extract 32 1)
          (call
           df.shiftC
           op.rM
           #b000
           ((_ extract 34 3)
            immShift)
           ((_ extract 2 2)
            loc.CPSR))))
        (bvadd loc.PC #x00000002))))
     branchWritePC)))
   (loc.CPSR
    (with
     ()
     (let
      ((immShift
       (concat
        #b000
        ((_ zero_extend 27)
         op.imm)))
       (nzcv
        (concat
         ((_ extract 0 0)
          loc.CPSR)
         (concat
          ((_ extract 1 1)
           loc.CPSR)
          (concat
           ((_ extract 0 0)
            (call
             df.shiftC
             op.rM
             #b000
             ((_ extract 34 3)
              immShift)
             ((_ extract 2 2)
              loc.CPSR)))
           ((_ extract 3 3)
            loc.CPSR))))))
      (ite
       (call
        df.testCondition
        (call df.ITState loc.CPSR)
        loc.CPSR)
       (ite
        (andp
         (notp
          (bvne
           #x00
           (concat
            ((_ extract 19 16)
             loc.CPSR)
            (concat
             ((_ extract 21 20)
              loc.CPSR)
             ((_ extract 6 5)
              loc.CPSR)))))
         (notp
          (call uf.arm.is_r15 op.rD)))
        (concat
         nzcv
         ((_ extract 31 4)
          loc.CPSR))
        loc.CPSR)
       loc.CPSR))))
   (op.rD
    (with
     ()
     (let
      ((immShift
       (concat
        #b000
        ((_ zero_extend 27)
         op.imm))))
      (ite
       (call
        df.testCondition
        (call df.ITState loc.CPSR)
        loc.CPSR)
       (ite
        (call uf.arm.is_r15 op.rD)
        op.rD
        ((_ extract 32 1)
         (call
          df.shiftC
          op.rM
          #b000
          ((_ extract 34 3)
           immShift)
          ((_ extract 2 2)
           loc.CPSR))))
       op.rD)))))))
