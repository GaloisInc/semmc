;; AND (register-shifted register), Encoding A1 (F7.1.15, F7-2560)
(let
 ((shiftC
   (ite
    (bveq
      ((_ zero_extend 24) ((_ extract 7 0) ((_ call "a32.soregreg_reg1") sorr)))
      #x00000000)
    (concat ((_ extract 29 29) 'CPSR) ((_ call "a32.soregreg_reg2") sorr))
    (ite
     (bveq (concat #b0 ((_ call "a32.soregreg_type") sorr)) #b000)
     (lslC)
     (ite
      (bveq (concat #b0 ((_ call "a32.soregreg_type") sorr)) #b001)
      (logicalShiftRightCarry)
      (ite
       (bveq (concat #b0 ((_ call "a32.soregreg_type") sorr)) #b010)
       (arithmeticShiftRightCarry)
       (ite
         (bveq (concat #b0 ((_ call "a32.soregreg_type") sorr)) #b011)
         (rorC)
         (rrxC)))))))
  (rrxC
   (concat
    ((_ extract 0 0) ((_ call "a32.soregreg_reg2") sorr))
    (concat
      ((_ extract 29 29) 'CPSR)
      ((_ extract 31 1) ((_ call "a32.soregreg_reg2") sorr)))))
  (rorC
   (concat
    (ite
     (bvult
      ((_ zero_extend 24) ((_ extract 7 0) ((_ call "a32.soregreg_reg1") sorr)))
      #x00000020)
     (ite
      ((_ call "test_bit_dynamic")
       (bvsub
        ((_ zero_extend 24)
         ((_ extract 7 0) ((_ call "a32.soregreg_reg1") sorr)))
        #x00000001)
       ((_ call "a32.soregreg_reg2") sorr))
      #b1
      #b0)
     #b0)
    (bvor
     (bvshl
      ((_ call "a32.soregreg_reg2") sorr)
      (bvsub
       #x00000020
       (bvurem
        ((_ zero_extend 24)
         ((_ extract 7 0) ((_ call "a32.soregreg_reg1") sorr)))
        #x00000020)))
     (bvlshr
      ((_ call "a32.soregreg_reg2") sorr)
      (bvurem
       ((_ zero_extend 24)
        ((_ extract 7 0) ((_ call "a32.soregreg_reg1") sorr)))
       #x00000020)))))
  (arithmeticShiftRightCarry
   (concat
    (ite
     (bvult
      ((_ zero_extend 24) ((_ extract 7 0) ((_ call "a32.soregreg_reg1") sorr)))
      #x00000020)
     (ite
      ((_ call "test_bit_dynamic")
       (bvsub
        ((_ zero_extend 24)
         ((_ extract 7 0) ((_ call "a32.soregreg_reg1") sorr)))
        #x00000001)
       ((_ call "a32.soregreg_reg2") sorr))
      #b1
      #b0)
     #b0)
    (bvashr
     ((_ call "a32.soregreg_reg2") sorr)
     (bvurem
      ((_ zero_extend 24) ((_ extract 7 0) ((_ call "a32.soregreg_reg1") sorr)))
      #x00000020))))
  (logicalShiftRightCarry
   (concat
    (ite
     (bvult
      ((_ zero_extend 24) ((_ extract 7 0) ((_ call "a32.soregreg_reg1") sorr)))
      #x00000020)
     (ite
      ((_ call "test_bit_dynamic")
       (bvsub
        ((_ zero_extend 24)
         ((_ extract 7 0) ((_ call "a32.soregreg_reg1") sorr)))
        #x00000001)
       ((_ call "a32.soregreg_reg2") sorr))
      #b1
      #b0)
     #b0)
    (bvlshr
     ((_ call "a32.soregreg_reg2") sorr)
     (bvurem
      ((_ zero_extend 24) ((_ extract 7 0) ((_ call "a32.soregreg_reg1") sorr)))
      #x00000020))))
  (lslC
   (bvshl
    ((_ zero_extend 1) ((_ call "a32.soregreg_reg2") sorr))
    ((_ zero_extend 1)
     ((_ zero_extend 24) ((_ extract 7 0) ((_ call "a32.soregreg_reg1") sorr))))))
  (testCondition
   (ite
    (andp (bveq #b1 ((_ extract 0 0) predBits)) (bvne predBits #xf))
    (notp
     (ite
      (bveq ((_ extract 3 1) predBits) #b000)
      (bveq #b1 ((_ extract 30 30) 'CPSR))
      (ite
       (bveq ((_ extract 3 1) predBits) #b001)
       (bveq #b1 ((_ extract 29 29) 'CPSR))
       (ite
        (bveq ((_ extract 3 1) predBits) #b010)
        (bveq #b1 ((_ extract 31 31) 'CPSR))
        (ite
         (bveq ((_ extract 3 1) predBits) #b011)
         (bveq #b1 ((_ extract 28 28) 'CPSR))
         (ite
          (bveq ((_ extract 3 1) predBits) #b100)
          (andp
           (bveq #b1 ((_ extract 29 29) 'CPSR))
           (notp (bveq #b1 ((_ extract 30 30) 'CPSR))))
          (ite
           (bveq ((_ extract 3 1) predBits) #b101)
           (bveq
             ((_ extract 31 31) 'CPSR)
             ((_ extract 28 28) 'CPSR))
           (ite
            (bveq ((_ extract 3 1) predBits) #b110)
            (andp
             (bveq
               ((_ extract 31 31) 'CPSR)
               ((_ extract 28 28) 'CPSR))
             (notp (bveq #b1 ((_ extract 30 30) 'CPSR))))
            (bveq #b0 #b0)))))))))
    (ite
     (bveq ((_ extract 3 1) predBits) #b000)
     (bveq #b1 ((_ extract 30 30) 'CPSR))
     (ite
      (bveq ((_ extract 3 1) predBits) #b001)
      (bveq #b1 ((_ extract 29 29) 'CPSR))
      (ite
       (bveq ((_ extract 3 1) predBits) #b010)
       (bveq #b1 ((_ extract 31 31) 'CPSR))
       (ite
        (bveq ((_ extract 3 1) predBits) #b011)
        (bveq #b1 ((_ extract 28 28) 'CPSR))
        (ite
         (bveq ((_ extract 3 1) predBits) #b100)
         (andp
           (bveq #b1 ((_ extract 29 29) 'CPSR))
           (notp (bveq #b1 ((_ extract 30 30) 'CPSR))))
         (ite
          (bveq ((_ extract 3 1) predBits) #b101)
          (bveq ((_ extract 31 31) 'CPSR) ((_ extract 28 28) 'CPSR))
          (ite
           (bveq ((_ extract 3 1) predBits) #b110)
           (andp
            (bveq
              ((_ extract 31 31) 'CPSR)
              ((_ extract 28 28) 'CPSR))
            (notp (bveq #b1 ((_ extract 30 30) 'CPSR))))
           (bveq #b0 #b0))))))))))
  (nzcv
   (concat
    ((_ extract 31 31) (bvand rN ((_ extract 31 0) (shiftC))))
    (concat
     (ite (bveq (bvand rN ((_ extract 31 0) (shiftC))) #x00000000) #b1 #b0)
     (concat ((_ extract 32 32) (shiftC)) ((_ extract 28 28) 'CPSR))))))
 ((operands
    ((rD . 'GPR)
    (setcc . 'Cc_out)
    (predBits . 'Pred)
    (sorr . 'So_reg_reg)
    (rN . 'GPR)))
  (in (setcc rN sorr rD 'CPSR 'PC))
  (defs
   (('PC (bvadd 'PC #x00000004))
    ('CPSR
     (ite
      (testCondition)
      (ite (bveq setcc #b1) (concat (nzcv) ((_ extract 27 0) 'CPSR)) 'CPSR)
      'CPSR))
    (rD (ite (testCondition) (bvand rN ((_ extract 31 0) (shiftC))) rD))))))
