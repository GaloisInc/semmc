;; Pop registers, Encoding T1 (F7.1.136, F7-2756)
((operands
 ((registers Reglist)))
 (in
  (loc.R14 loc.R13 loc.R12 loc.R11 loc.R10 loc.R9 loc.R8 loc.R7 loc.R6 loc.R5 loc.R4 loc.R3 loc.R2 loc.R1 loc.R0 loc.Mem op.registers loc.CPSR loc.PC))
 (defs
  ((loc.PC
   (with
    ()
    (let
     ((isActive_R15
      (bvne
       #x0000
       (bvand
        #x8000
        (call uf.t32.reglist op.registers))))
      (cntReg_uptoR15
       (call
        uf.popcnt.32
        ((_ zero_extend 16)
         ((_ extract 15 0)
          (call uf.t32.reglist op.registers)))))
      (stkOff_R15
       (bvsub cntReg_uptoR15 #x00000001))
      (pcStkVal
       (call
        uf.read_mem.32
        loc.Mem
        (bvadd
         loc.R13
         (bvmul #x00000004 stkOff_R15))))
      (bxWritePC
       (ite
        isActive_R15
        (ite
         (bveq
          #b1
          ((_ extract 31 31)
           pcStkVal))
         (bvand #xfffffffe pcStkVal)
         (ite
          (bveq
           #b1
           ((_ extract 30 30)
            pcStkVal))
          (bvand #xfffffffd pcStkVal)
          pcStkVal))
        (bvadd loc.PC #x00000002))))
     bxWritePC)))
   (loc.CPSR
    (with
     ()
     (let
      ((isActive_R15
       (bvne
        #x0000
        (bvand
         #x8000
         (call uf.t32.reglist op.registers))))
       (cntReg_uptoR15
        (call
         uf.popcnt.32
         ((_ zero_extend 16)
          ((_ extract 15 0)
           (call uf.t32.reglist op.registers)))))
       (stkOff_R15
        (bvsub cntReg_uptoR15 #x00000001))
       (pcStkVal
        (call
         uf.read_mem.32
         loc.Mem
         (bvadd
          loc.R13
          (bvmul #x00000004 stkOff_R15))))
       (SetA32Mode
        (bvand
         #xfeffffff
         (bvand #xffffffdf loc.CPSR))))
      (ite
       (call
        df.testCondition
        (call df.ITState loc.CPSR)
        loc.CPSR)
       (ite
        isActive_R15
        (ite
         (bveq
          #b1
          ((_ extract 31 31)
           pcStkVal))
         loc.CPSR
         SetA32Mode)
        loc.CPSR)
       loc.CPSR))))
   (loc.R13
    (with
     ()
     (let
      ((newSP
       (bvadd
        loc.R13
        (bvmul
         #x00000004
         (call
          uf.popcnt.32
          ((_ zero_extend 16)
           (call uf.t32.reglist op.registers)))))))
      newSP)))
   (loc.R14
    (with
     ()
     (let
      ((isActive_R14
       (bvne
        #x0000
        (bvand
         #x4000
         (call uf.t32.reglist op.registers))))
       (cntReg_uptoR14
        (call
         uf.popcnt.32
         ((_ zero_extend 17)
          ((_ extract 15 1)
           (call uf.t32.reglist op.registers)))))
       (stkOff_R14
        (bvsub cntReg_uptoR14 #x00000001))
       (stkVal_R14
        (ite
         isActive_R14
         (call
          uf.read_mem.32
          loc.Mem
          (bvadd
           loc.R13
           (bvmul #x00000004 stkOff_R14)))
         loc.R14)))
      (ite
       (call
        df.testCondition
        (call df.ITState loc.CPSR)
        loc.CPSR)
       stkVal_R14
       loc.R14))))
   (loc.R12
    (with
     ()
     (let
      ((isActive_R12
       (bvne
        #x0000
        (bvand
         #x1000
         (call uf.t32.reglist op.registers))))
       (cntReg_uptoR12
        (call
         uf.popcnt.32
         ((_ zero_extend 19)
          ((_ extract 15 3)
           (call uf.t32.reglist op.registers)))))
       (stkOff_R12
        (bvsub cntReg_uptoR12 #x00000001))
       (stkVal_R12
        (ite
         isActive_R12
         (call
          uf.read_mem.32
          loc.Mem
          (bvadd
           loc.R13
           (bvmul #x00000004 stkOff_R12)))
         loc.R12)))
      (ite
       (call
        df.testCondition
        (call df.ITState loc.CPSR)
        loc.CPSR)
       stkVal_R12
       loc.R12))))
   (loc.R11
    (with
     ()
     (let
      ((isActive_R11
       (bvne
        #x0000
        (bvand
         #x0800
         (call uf.t32.reglist op.registers))))
       (cntReg_uptoR11
        (call
         uf.popcnt.32
         ((_ zero_extend 20)
          ((_ extract 15 4)
           (call uf.t32.reglist op.registers)))))
       (stkOff_R11
        (bvsub cntReg_uptoR11 #x00000001))
       (stkVal_R11
        (ite
         isActive_R11
         (call
          uf.read_mem.32
          loc.Mem
          (bvadd
           loc.R13
           (bvmul #x00000004 stkOff_R11)))
         loc.R11)))
      (ite
       (call
        df.testCondition
        (call df.ITState loc.CPSR)
        loc.CPSR)
       stkVal_R11
       loc.R11))))
   (loc.R10
    (with
     ()
     (let
      ((isActive_R10
       (bvne
        #x0000
        (bvand
         #x0400
         (call uf.t32.reglist op.registers))))
       (cntReg_uptoR10
        (call
         uf.popcnt.32
         ((_ zero_extend 21)
          ((_ extract 15 5)
           (call uf.t32.reglist op.registers)))))
       (stkOff_R10
        (bvsub cntReg_uptoR10 #x00000001))
       (stkVal_R10
        (ite
         isActive_R10
         (call
          uf.read_mem.32
          loc.Mem
          (bvadd
           loc.R13
           (bvmul #x00000004 stkOff_R10)))
         loc.R10)))
      (ite
       (call
        df.testCondition
        (call df.ITState loc.CPSR)
        loc.CPSR)
       stkVal_R10
       loc.R10))))
   (loc.R9
    (with
     ()
     (let
      ((isActive_R9
       (bvne
        #x0000
        (bvand
         #x0200
         (call uf.t32.reglist op.registers))))
       (cntReg_uptoR9
        (call
         uf.popcnt.32
         ((_ zero_extend 22)
          ((_ extract 15 6)
           (call uf.t32.reglist op.registers)))))
       (stkOff_R9
        (bvsub cntReg_uptoR9 #x00000001))
       (stkVal_R9
        (ite
         isActive_R9
         (call
          uf.read_mem.32
          loc.Mem
          (bvadd
           loc.R13
           (bvmul #x00000004 stkOff_R9)))
         loc.R9)))
      (ite
       (call
        df.testCondition
        (call df.ITState loc.CPSR)
        loc.CPSR)
       stkVal_R9
       loc.R9))))
   (loc.R8
    (with
     ()
     (let
      ((isActive_R8
       (bvne
        #x0000
        (bvand
         #x0100
         (call uf.t32.reglist op.registers))))
       (cntReg_uptoR8
        (call
         uf.popcnt.32
         ((_ zero_extend 23)
          ((_ extract 15 7)
           (call uf.t32.reglist op.registers)))))
       (stkOff_R8
        (bvsub cntReg_uptoR8 #x00000001))
       (stkVal_R8
        (ite
         isActive_R8
         (call
          uf.read_mem.32
          loc.Mem
          (bvadd
           loc.R13
           (bvmul #x00000004 stkOff_R8)))
         loc.R8)))
      (ite
       (call
        df.testCondition
        (call df.ITState loc.CPSR)
        loc.CPSR)
       stkVal_R8
       loc.R8))))
   (loc.R7
    (with
     ()
     (let
      ((isActive_R7
       (bvne
        #x0000
        (bvand
         #x0080
         (call uf.t32.reglist op.registers))))
       (cntReg_uptoR7
        (call
         uf.popcnt.32
         ((_ zero_extend 24)
          ((_ extract 15 8)
           (call uf.t32.reglist op.registers)))))
       (stkOff_R7
        (bvsub cntReg_uptoR7 #x00000001))
       (stkVal_R7
        (ite
         isActive_R7
         (call
          uf.read_mem.32
          loc.Mem
          (bvadd
           loc.R13
           (bvmul #x00000004 stkOff_R7)))
         loc.R7)))
      (ite
       (call
        df.testCondition
        (call df.ITState loc.CPSR)
        loc.CPSR)
       stkVal_R7
       loc.R7))))
   (loc.R6
    (with
     ()
     (let
      ((isActive_R6
       (bvne
        #x0000
        (bvand
         #x0040
         (call uf.t32.reglist op.registers))))
       (cntReg_uptoR6
        (call
         uf.popcnt.32
         ((_ zero_extend 25)
          ((_ extract 15 9)
           (call uf.t32.reglist op.registers)))))
       (stkOff_R6
        (bvsub cntReg_uptoR6 #x00000001))
       (stkVal_R6
        (ite
         isActive_R6
         (call
          uf.read_mem.32
          loc.Mem
          (bvadd
           loc.R13
           (bvmul #x00000004 stkOff_R6)))
         loc.R6)))
      (ite
       (call
        df.testCondition
        (call df.ITState loc.CPSR)
        loc.CPSR)
       stkVal_R6
       loc.R6))))
   (loc.R5
    (with
     ()
     (let
      ((isActive_R5
       (bvne
        #x0000
        (bvand
         #x0020
         (call uf.t32.reglist op.registers))))
       (cntReg_uptoR5
        (call
         uf.popcnt.32
         ((_ zero_extend 26)
          ((_ extract 15 10)
           (call uf.t32.reglist op.registers)))))
       (stkOff_R5
        (bvsub cntReg_uptoR5 #x00000001))
       (stkVal_R5
        (ite
         isActive_R5
         (call
          uf.read_mem.32
          loc.Mem
          (bvadd
           loc.R13
           (bvmul #x00000004 stkOff_R5)))
         loc.R5)))
      (ite
       (call
        df.testCondition
        (call df.ITState loc.CPSR)
        loc.CPSR)
       stkVal_R5
       loc.R5))))
   (loc.R4
    (with
     ()
     (let
      ((isActive_R4
       (bvne
        #x0000
        (bvand
         #x0010
         (call uf.t32.reglist op.registers))))
       (cntReg_uptoR4
        (call
         uf.popcnt.32
         ((_ zero_extend 27)
          ((_ extract 15 11)
           (call uf.t32.reglist op.registers)))))
       (stkOff_R4
        (bvsub cntReg_uptoR4 #x00000001))
       (stkVal_R4
        (ite
         isActive_R4
         (call
          uf.read_mem.32
          loc.Mem
          (bvadd
           loc.R13
           (bvmul #x00000004 stkOff_R4)))
         loc.R4)))
      (ite
       (call
        df.testCondition
        (call df.ITState loc.CPSR)
        loc.CPSR)
       stkVal_R4
       loc.R4))))
   (loc.R3
    (with
     ()
     (let
      ((isActive_R3
       (bvne
        #x0000
        (bvand
         #x0008
         (call uf.t32.reglist op.registers))))
       (cntReg_uptoR3
        (call
         uf.popcnt.32
         ((_ zero_extend 28)
          ((_ extract 15 12)
           (call uf.t32.reglist op.registers)))))
       (stkOff_R3
        (bvsub cntReg_uptoR3 #x00000001))
       (stkVal_R3
        (ite
         isActive_R3
         (call
          uf.read_mem.32
          loc.Mem
          (bvadd
           loc.R13
           (bvmul #x00000004 stkOff_R3)))
         loc.R3)))
      (ite
       (call
        df.testCondition
        (call df.ITState loc.CPSR)
        loc.CPSR)
       stkVal_R3
       loc.R3))))
   (loc.R2
    (with
     ()
     (let
      ((isActive_R2
       (bvne
        #x0000
        (bvand
         #x0004
         (call uf.t32.reglist op.registers))))
       (cntReg_uptoR2
        (call
         uf.popcnt.32
         ((_ zero_extend 29)
          ((_ extract 15 13)
           (call uf.t32.reglist op.registers)))))
       (stkOff_R2
        (bvsub cntReg_uptoR2 #x00000001))
       (stkVal_R2
        (ite
         isActive_R2
         (call
          uf.read_mem.32
          loc.Mem
          (bvadd
           loc.R13
           (bvmul #x00000004 stkOff_R2)))
         loc.R2)))
      (ite
       (call
        df.testCondition
        (call df.ITState loc.CPSR)
        loc.CPSR)
       stkVal_R2
       loc.R2))))
   (loc.R1
    (with
     ()
     (let
      ((isActive_R1
       (bvne
        #x0000
        (bvand
         #x0002
         (call uf.t32.reglist op.registers))))
       (cntReg_uptoR1
        (call
         uf.popcnt.32
         ((_ zero_extend 30)
          ((_ extract 15 14)
           (call uf.t32.reglist op.registers)))))
       (stkOff_R1
        (bvsub cntReg_uptoR1 #x00000001))
       (stkVal_R1
        (ite
         isActive_R1
         (call
          uf.read_mem.32
          loc.Mem
          (bvadd
           loc.R13
           (bvmul #x00000004 stkOff_R1)))
         loc.R1)))
      (ite
       (call
        df.testCondition
        (call df.ITState loc.CPSR)
        loc.CPSR)
       stkVal_R1
       loc.R1))))
   (loc.R0
    (with
     ()
     (let
      ((isActive_R0
       (bvne
        #x0000
        (bvand
         #x0001
         (call uf.t32.reglist op.registers))))
       (cntReg_uptoR0
        (call
         uf.popcnt.32
         ((_ zero_extend 31)
          ((_ extract 15 15)
           (call uf.t32.reglist op.registers)))))
       (stkOff_R0
        (bvsub cntReg_uptoR0 #x00000001))
       (stkVal_R0
        (ite
         isActive_R0
         (call
          uf.read_mem.32
          loc.Mem
          (bvadd
           loc.R13
           (bvmul #x00000004 stkOff_R0)))
         loc.R0)))
      (ite
       (call
        df.testCondition
        (call df.ITState loc.CPSR)
        loc.CPSR)
       stkVal_R0
       loc.R0)))))))
