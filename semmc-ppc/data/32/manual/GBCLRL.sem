;; BCLR (XL-form, LK=1, AA=0)
;; Generic branch conditional to LR with arbitrary BO field
(let
 ((false
  (bvne #b0 #b0))
  (true
   (bveq #b0 #b0)))
 ((operands
  ((bh . 'I32imm)
   (bi . 'Crbitrc)
   (bo . 'U5imm)))
  (in
   ('CR 'CTR 'IP 'LNK))
  (defs
   (('LNK
    (bvadd 'IP #x00000004))
    ('IP
     (ite
      (andp
       (ite
        ((_ call "test_bit_dynamic")
         ((_ zero_extend 27)
          bo)
         #x00000004)
        (true)
        (ite
         ((_ call "test_bit_dynamic")
          ((_ zero_extend 27)
           bo)
          #x00000003)
         ((_ call "test_bit_dynamic")
          'CR
          ((_ zero_extend 27)
           (bvsub #b11111 bi)))
         (notp
          ((_ call "test_bit_dynamic")
           'CR
           ((_ zero_extend 27)
            (bvsub #b11111 bi))))))
       (ite
        ((_ call "test_bit_dynamic")
         ((_ zero_extend 27)
          bo)
         #x00000002)
        (true)
        (ite
         ((_ call "test_bit_dynamic")
          ((_ zero_extend 27)
           bo)
          #x00000001)
         (xorp
          (notp
           (bveq 'CTR #x00000000))
          (true))
         (xorp
          (notp
           (bveq 'CTR #x00000000))
          (false)))))
      (concat
       ((_ extract 29 0)
        'LNK)
       #b00)
      (bvadd 'IP #x00000004)))))))
