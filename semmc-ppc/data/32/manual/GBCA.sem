;; GBC (B-form, AA=1, LK=0)
;; Generic branch conditional with arbitrary BO
(let
 ((false
  (bvne #b0 #b0))
  (true
   (bveq #b0 #b0)))
 ((operands
  ((target . 'Abscondbrtarget)
   (bi . 'Crbitrc)
   (bo . 'U5imm)))
  (in
   ('IP 'CR 'CTR))
  (defs
   (('IP
    (ite
     (andp
      (ite
       ((_ call "uf.test_bit_dynamic")
        ((_ zero_extend 27)
         bo)
        #x00000004)
       (true)
       (ite
        ((_ call "uf.test_bit_dynamic")
         ((_ zero_extend 27)
          bo)
         #x00000003)
        ((_ call "uf.test_bit_dynamic")
         'CR
         ((_ zero_extend 27)
          (bvsub #b11111 bi)))
        (notp
         ((_ call "uf.test_bit_dynamic")
          'CR
          ((_ zero_extend 27)
           (bvsub #b11111 bi))))))
      (ite
       ((_ call "uf.test_bit_dynamic")
        ((_ zero_extend 27)
         bo)
        #x00000002)
       (true)
       (ite
        ((_ call "uf.test_bit_dynamic")
         ((_ zero_extend 27)
          bo)
         #x00000001)
        (xorp
         (notp
          (bveq
           (ite
            (notp
             ((_ call "uf.test_bit_dynamic")
              ((_ zero_extend 27)
               bo)
              #x00000002))
            (bvsub 'CTR #x00000001)
            'CTR)
           #x00000000))
         (true))
        (xorp
         (notp
          (bveq
           (ite
            (notp
             ((_ call "uf.test_bit_dynamic")
              ((_ zero_extend 27)
               bo)
              #x00000002))
            (bvsub 'CTR #x00000001)
            'CTR)
           #x00000000))
         (false)))))
     ((_ sign_extend 16)
      (concat target #b00))
     (bvadd 'IP #x00000004)))
    ('CTR
     (ite
      (notp
       ((_ call "uf.test_bit_dynamic")
        ((_ zero_extend 27)
         bo)
        #x00000002))
      (bvsub 'CTR #x00000001)
      'CTR))))))
